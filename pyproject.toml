[build-system]
requires = [
    "poetry-core>=2.1.3",
]

[tool.poetry]
name = "pebbles_game"
version = "0.0.0"
description = "Game with GUI. Rules are described in README.md."
readme = "README.md"
repository = "https://github.com/marcinpiotrsobczyk/pebbles"
authors = [
    "Marcin Sobczyk <marcinpiotrsobczyk@gmail.com>"
]
packages = [
    { include = "pebbles" },
]


[tool.poetry.dependencies]
python = "^3.12"
poetry = "^2.1.3"


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
ruff = "^0.11.13"
mypy = "^1.16.0"
pre-commit = "^4.2.0"


[tool.poetry.scripts]
pebbles_game = "pebbles.main:main"


[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- set dirty_postfix = '.dirty' if dirty else '' -%}
    {%- if distance == 0 and not dirty -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}{{ dirty_postfix }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}{{ dirty_postfix }}
    {%- endif -%}
"""

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = ["ALL"]
ignore = [
    "D1", # missing docstring in public
    "D203", # 1 blank line required before class docstring; because we re using D211
    "D212", # Multi-line docstring summary should start at the first line; because we re using D213
    "D413", # Missing blank line after last section
    "TRY003", # Avoid specifying long messages outside the exception class; too restrictive
    "TD002", # Missing author in to-do; no need for that
    "TD003",  # Missing issue link on the line following this to-do; no need for that
    "SLF001",  # Private member accessed: {access}; too restrictive
    "COM812", # Trailing comma missing; handled by ruff formatter
    "EM",  # agreed not to use it in our convention
    "FIX", # can't have that enabled, as we treat ruff result as an error on CI
    "S101",  # Use of assert detected; too restrictive
    "S603", # `subprocess` call: check for execution of untrusted input; https://github.com/astral-sh/ruff/issues/4045
    "ISC001", # Implicitly concatenated string literals on one line; disabled because conflicts with ruff formatter
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope="function"
testpaths = ["tests"]
addopts = "--strict-markers"
